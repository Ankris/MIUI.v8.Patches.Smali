appfile <android.policy.jar>;

# Fix volume wake
methodreplace "%smali%/com/android/internal/policy/impl/PhoneWindowManager.smali" ".method private isWakeKeyWhenScreenOff(I)Z" "%here%/android.policy.jar/isWakeKeyWhenScreenOff.m";

# Smart Wake
methodreplace "%smali%/com/android/internal/policy/impl/BaseMiuiPhoneWindowManager.smali" 	".method public interceptKeyBeforeQueueingInternal(Landroid/view/KeyEvent;IZ)I" "%here%/android.policy.jar/interceptKeyBeforeQueueingInternal.m";

# Add sendMediaButtonEvent method
methodreplace "%smali%/com/android/internal/policy/impl/BaseMiuiPhoneWindowManager.smali" 	".method protected isInLockTaskMode()Z" 		"%here%/android.policy.jar/sendMediaButtonEvent.m";

# Onscreen Buttons
replaceinmethod "%smali%/com/android/internal/policy/impl/PhoneWindowManager.smali" ".method public setInitialDisplaySize(Landroid/view/Display;III)V" "Lcom/android/internal/policy/impl/PhoneWindowManager;->mNavigationBarCanMove:Z" "Lcom/android/internal/policy/impl/PhoneWindowManager;->mNavigationBarCanMove:Z\n\n    iget-object v4, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;\n\n    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;\n\n    move-result-object v4\n\n    const-string v8, "enable_onscreen_buttons"\n\n    const/4 v0, 0x0\n\n    invoke-static {v4, v8, v0}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I\n\n    move-result v4\n\n    if-nez v4, :cond_77\n\n    goto :goto_50\n\n    :cond_77\n\n    move-object/from16 v0, p0\n\n    const/4 v4, 0x1\n\n    iput-boolean v4, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasNavigationBar:Z\n\n    goto :goto_3\n\n    :goto_50\n";

# Extended reboot menu
#methodreplace "%smali%/com/android/internal/policy/impl/MiuiGlobalActions$1.smali" ".method public onCommand(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V" "%here%/android.policy.jar/onCommand.m";
replaceinmethod "%smali%/com/android/internal/policy/impl/MiuiGlobalActions$1.smali" ".method public onCommand(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/String;)V" "    :cond_4" "    :cond_4\n\n    const-string v0, "recovery"\n\n    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z\n\n    move-result v0\n\n    if-eqz v0, :cond_5\n\n    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;\n\n    move-result-object v0\n\n    const-string v1, "reboot recovery"\n\n    invoke-virtual {v0, v1}, Ljava/lang/Runtime;->exec(Ljava/lang/String;)Ljava/lang/Process;\n\n    goto :goto_0\n\n    :cond_5";

# Add volume skip track
replaceinfile 	"%smali%/com/android/internal/policy/impl/PhoneWindowManager.smali" 			"instance fields" 																		"instance fields \n.field mVolumePressed:Z \n\n .field mVolumeLongPressed:Z \n\n.field mVolumeKeyCode:I \n\n.field mVolumeLongPressTimeoutRunnable:Ljava/lang/Runnable;";
replaceinmethod "%smali%/com/android/internal/policy/impl/PhoneWindowManager.smali" 			".method public constructor <init>()V"									"return-void"				"new-instance v0, Lcom/android/internal/policy/impl/PhoneWindowManager$VolumeLongPress;\n\n    invoke-direct {v0, p0}, Lcom/android/internal/policy/impl/PhoneWindowManager$VolumeLongPress;-><init>(Lcom/android/internal/policy/impl/PhoneWindowManager;)V\n\n    iput-object v0, p0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumeLongPressTimeoutRunnable:Ljava/lang/Runnable;\n\n    return-void";
replaceinmethod "%smali%/com/android/internal/policy/impl/PhoneWindowManager.smali" 			".method public interceptKeyBeforeQueueing(Landroid/view/KeyEvent;IZ)I"		":sswitch_1\n    const/16"		":sswitch_1\n    if-nez p3, :cond_80\n    const-string/jumbo v1, "persist.sys.volume.skip"\n    const/4 v0, 0x0\n    invoke-static {v1, v0}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z\n    move-result v0\n    if-eqz v0, :cond_80\n    move-object/from16 v0, p0\n    invoke-virtual {v0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->isMusicActive()Z\n    move-result v1\n    if-nez v1, :cond_50\n    invoke-virtual {v0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->isFmActive()Z\n    move-result v1\n    if-nez v1, :cond_50\n    goto :goto_80\n\n:cond_50 \n    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getAction()I\n    move-result v1\n    if-nez v1, :cond_60\n\n    iget-object v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHandler:Landroid/os/Handler;\n    iget-object v2, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumeLongPressTimeoutRunnable:Ljava/lang/Runnable;\n    const-wide/16 v3, 0x1f4\n    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z\n    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getKeyCode()I\n    move-result v1\n    iput v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumeKeyCode:I\n    const/4 v1, 0x1\n    iput-boolean v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumePressed:Z\n    goto :goto_60\n\n:cond_60\n    iget-object v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHandler:Landroid/os/Handler;\n    iget-object v2, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumeLongPressTimeoutRunnable:Ljava/lang/Runnable;\n    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V\n\n    const/4 v1, 0x0\n    iput-boolean v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumePressed:Z\n    iget-boolean v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumeLongPressed:Z\n    if-eqz v1, :cond_70\n    \n    const/4 v1, 0x0\n    iput-boolean v1, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mVolumeLongPressed:Z\n    \n:goto_60\n    const/16 v1, 0x0\n    return v1\n\n:cond_70\n    const/4 v7, 0x1\n    goto :goto_6\n:cond_80\n:goto_80\n    const/16";
methodreplace 	"%smali%/com/android/internal/policy/impl/PhoneWindowManager.smali" 			".method public finishLayoutLw()V" 															"%here%/android.policy.jar/VolumeSkipTrack.m";
copyfile 	"%here%/android.policy.jar/PhoneWindowManager$VolumeLongPress.smali" 			"%smali%/com/android/internal/policy/impl/PhoneWindowManager$VolumeLongPress.smali";
replaceinmethod "%smali%/com/android/internal/policy/impl/BaseMiuiPhoneWindowManager.smali" 	".method private interceptSnapKey(Z)V"								".prologue"				".prologue\n    invoke-direct {p0}, Lcom/android/internal/policy/impl/BaseMiuiPhoneWindowManager;->getAudioManager()Landroid/media/AudioManager;\n    move-result-object v0\n    invoke-virtual {v0}, Landroid/media/AudioManager;->isLocalOrRemoteMusicActive()Z\n    move-result v1\n    if-eqz v1, :cond_10\n    return-void\n    :cond_10\n";
